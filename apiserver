apiserver是处理请求的一个restapi
进入apiserver首先是要认证，然后是鉴权，然后是admission准入，分为mutating(加入参数生成新的request)，validating，对生成的新的请求进行校验，以上几步都可以有hook来进行额外的操作，
最后持久化道etc
apiserver是挡在etcd之前的它会存在缓存，以减少etcd的压力
基于x509创建访问apiserver的user。
1 生成对应的key
openssl genrsa -out myuser.key 2048
2. 生成csr certificate sign request
openssl req -new -key myuser.key -out myuser.csr
3.  cat myuser.csr | base64 | tr -d "\n"
查看csr中的request 填入下方k8s csr对象中
apiVersion: certificates.k8s.io/v1
kind: CertificateSigningRequest
metadata:
  name: myuser
spec:
  request: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQzJ6Q0NBY01DQVFBdR4Q3pBSkJnTlZCQWdNQWtwVE1Rc3dDUVlEVlFRSApEQUp6YURFTU1Bb0dBMVVFQ2d3RGMyRndNUTh3RFFZRFZRUUxEQVp0ZVhWelpYSXhEekFOQmdOVkJBTU1CbTE1CmRYTmxjakVkTUJzR0NTcUdTSWIzRFFFSkFSWU9iWGwxYzJWeVFITmhjQzVqYjIwd2dnRWlNQTBHQ1NxR1NJYjMKRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDbUZoNkxRemF0bG9BWTZ4RTFnc1BrZnUrYTk2TnlKNW9oUVNSRApIbWJWQmZmb0pXUEZ5SHBMR3REaWs2SGpuR1VkdDFpSWR1T29EcGlsQ3lxMXMydDJWZHNOVUpCcmlQWE0zZUd0CjBqcDNXZzE1YUlXRERHQ25MZm5JRkVtSytGbFREMDVKM215bDY2T1NLL0hKOE1kYko2QS9TZjJpTlhDV0lJSWoKR01iL1pvTGMxd255SWk4M1VBb0tFeHlHTGNSU1ZRUTJ1OHdoQ1RRM3VSM3VNNVJvY3M4VFROSDI4V1BweXErbQpCQlpRcWF1ZUJtK3lFNkRyaUl0NlZ6b0ExazhKanQxd2gwTVB6bi9FaXN2ZEpKSHRTOHJTWlZIWk5sWHZKbFBnCitUZFZiME50MzlWL1U1TFoyME1RdkNjY1NHYVVMSTRnUXpzMFFuQW5MaGsxY2NyQkFnTUJBQUdnSURBZUJna3EKaGtpRzl3MEJDUWN4RVF3UGRHWm5hakU1T1RJd01UQXpWMWtxTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCdwpRcUcyNTA2L2pVU0lBVkJndkdEcWlIUzRwOG5jNGFoS3FOOHFWV0g4d1pwRXJmVzZ4MXkzb1hRSm44STVvVys1Ck5UYWRnSUwvdmQ3OStpK2NsZ0tNb0hHSmtCaXJDVTVKY01QNE5qdzJiMkhIbTIwMWd5SmdqRUJiUG1CcVh5VHkKcTk2WmQ4TlhTN081RzNrR0UzV2JGNEdxWVpLY3BycXZnSWMyN2hjbXBEdjUzL3FlbVd4dDVqMk1mZElyNk9ybwowbkljbWU1MzQvY3NONEZMK2VuTjk0WUZ3cnhpdWtVS0xYcXRENkphaFJnRTRWUVNlVm8rTmZpbzFDZTYyTkl5CkdjcFlKV2Ivc2VQV25acm8rRlhuMXZHUUUyQlRlUjRpTWZINjNaRUhQSXhwaXlGc2gycUlGNUJPcU4xeVJRa3kKdE5tZmh4QlJiWFJ1Vm9LYnFJY3QKLS0tLS1FTkQgQ0VSVElGSUNBVEUgUkVRVUVTVC0tLS0tCg== 
  signerName: kubernetes.io/kube-apiserver-client
  expirationSeconds: 86400  # one day
  usages:
  - client auth

创建csr对象
kubectl certificate approve myuser
创建role rolebinding 关联myuser
kubectl create role developer --verb=create --verb=get --verb=list --verb=update --verb=delete --resource=pods
kubectl create rolebinding developer-binding-myuser --role=developer --user=myuser
kubectl get pods --username=myuser
